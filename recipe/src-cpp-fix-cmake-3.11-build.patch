diff --git a/src/cpp/CMakeLists.txt b/src/cpp/CMakeLists.txt
index 49c53f0..a977252 100644
--- a/src/cpp/CMakeLists.txt
+++ b/src/cpp/CMakeLists.txt
@@ -29,12 +29,12 @@ if (BUILD_CUDA_LIB)
 endif()

 if(CMAKE_SYSTEM_NAME STREQUAL "Linux" AND CMAKE_COMPILER_IS_GNUCC)
-    add_library(flann_cpp SHARED "")
+    add_library(flann_cpp SHARED "empty.cpp")
     set_target_properties(flann_cpp PROPERTIES LINKER_LANGUAGE CXX)
     target_link_libraries(flann_cpp -Wl,-whole-archive flann_cpp_s -Wl,-no-whole-archive)

     if (BUILD_CUDA_LIB)
-	    cuda_add_library(flann_cuda SHARED "")
+	    cuda_add_library(flann_cuda SHARED "empty.cpp")
         set_target_properties(flann_cuda PROPERTIES LINKER_LANGUAGE CXX)
         target_link_libraries(flann_cuda -Wl,-whole-archive flann_cuda_s -Wl,-no-whole-archive)
         set_property(TARGET flann_cpp_s PROPERTY COMPILE_DEFINITIONS FLANN_USE_CUDA)
@@ -83,7 +83,7 @@ if (BUILD_C_BINDINGS)
     set_property(TARGET flann_s PROPERTY COMPILE_DEFINITIONS FLANN_STATIC)

     if(CMAKE_SYSTEM_NAME STREQUAL "Linux" AND CMAKE_COMPILER_IS_GNUCC)
-        add_library(flann SHARED "")
+        add_library(flann SHARED "empty.cpp")
         set_target_properties(flann PROPERTIES LINKER_LANGUAGE CXX)
         target_link_libraries(flann -Wl,-whole-archive flann_s -Wl,-no-whole-archive)
     else()
diff --git a/src/cpp/flann/algorithms/kdtree_cuda_3d_index.cu b/src/cpp/flann/algorithms/kdtree_cuda_3d_index.cu
index e9b0508..a14401a 100644
--- a/src/cpp/flann/algorithms/kdtree_cuda_3d_index.cu
+++ b/src/cpp/flann/algorithms/kdtree_cuda_3d_index.cu
@@ -43,6 +43,7 @@
 #include <thrust/count.h>
 #include <flann/algorithms/kdtree_cuda_builder.h>
 #include <vector_types.h>
+#include <thrust/gather.h>
 namespace flann
 {

@@ -279,7 +280,7 @@ void KDTreeCuda3dIndex<Distance>::knnSearchGpu(const Matrix<ElementType>& querie
     assert(dists.rows >= queries.rows);
     assert(int(indices.cols) >= knn);
     assert( dists.cols == indices.cols && dists.stride==indices.stride );
-
+
     int istride=queries.stride/sizeof(ElementType);
     int ostride=indices.stride/4;

@@ -446,7 +447,7 @@ int KDTreeCuda3dIndex<Distance >::radiusSearchGpu(const Matrix<ElementType>& que
     bool use_heap = params.use_heap;
     if (indices.size() < queries.rows ) indices.resize(queries.rows);
     if (dists.size() < queries.rows ) dists.resize(queries.rows);
-
+
     int istride=queries.stride/sizeof(ElementType);

     thrust::device_vector<float> queriesDev(istride* queries.rows,0);
@@ -732,7 +733,7 @@ void KDTreeCuda3dIndex<Distance>::uploadTreeToGpu()
     if( get_param(index_params_,"input_is_gpu_float4",false) ) {
 		assert( dataset_.cols == 3 && dataset_.stride==4*sizeof(float));
         thrust::copy( thrust::device_pointer_cast((float4*)dataset_.ptr()),thrust::device_pointer_cast((float4*)(dataset_.ptr()))+size_,tmp.begin());
-
+
     }
     else {
         // k is limited to 4 -> use 128bit-alignment regardless of dimensionality
diff --git a/src/cpp/empty.cpp b/src/cpp/empty.cpp
new file mode 100644
index 0000000..40a8c17
--- /dev/null
+++ b/src/cpp/empty.cpp
@@ -0,0 +1 @@
+/* empty */
